trigger:
- none
 
stages:
- stage: Build
  jobs:
    - job: Build
      displayName: Building IWA Project
      pool:
        vmImage: ubuntu-latest
      steps:
      # Etapa de compilação com Maven para empacotar o projeto Java
      - task: Maven@3
        inputs:
          mavenPomFile: 'pom.xml'                   # Especifica o arquivo pom.xml do projeto Maven
          mavenOptions: '-Xmx3072m'                 # Configura o limite de memória para o Maven
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.17'                  # Define a versão do JDK para compilar
          jdkArchitectureOption: 'x64'              # Define a arquitetura do JDK
          publishJUnitResults: true                 # Publica os resultados do JUnit
          testResultsFiles: '**/surefire-reports/TEST-*.xml'  # Localiza os resultados dos testes para publicação
          goals: 'package'                          # Objetivo Maven para empacotar o projeto (gera um JAR ou WAR)
 
    - job: SAST
      displayName: Fortify SAST
      dependsOn:
       - Build
      pool:
       vmImage: 'ubuntu-latest'
      container:
        image: fortifydocker/fortify-ci-tools:5.4.1-jdk-17
        env:
          FCLI_DEFAULT_SC_SAST_CLIENT_AUTH_TOKEN: $(_FCLI_DEFAULT_SC_SAST_CLIENT_AUTH_TOKEN) # Token para autenticação do cliente ScanCentral SAST
          FCLI_DEFAULT_SSC_USER: $(_FCLI_DEFAULT_SSC_USER)                                   # Usuário para autenticação no SSC
          FCLI_DEFAULT_SSC_CI_TOKEN: $(_FCLI_DEFAULT_SSC_CI_TOKEN)                           # Token CI para autenticação no SSC
          FCLI_DEFAULT_SSC_URL: $(_FCLI_DEFAULT_SSC_URL)                                     # URL do servidor Fortify SSC
          SSC_APP_VERSION_ID: $(_SSC_APP_VERSION_ID)                                         # ID da versão do aplicativo SSC
          SC_SAST_SENSOR_VERSION: 22.2                                                       # Versão do sensor ScanCentral SAST
      steps:
      - script: |
          echo "Setting connection with Fortify Platform"
 
          # Login no SSC (Software Security Center) da Fortify
          fcli ssc session login -u $FCLI_DEFAULT_SSC_USER -p $(_FCLI_SSC_PASSWORD) || echo "Erro no login SSC"
          # Lista sessões do SSC para verificar o login
          echo "Verificando login SSC"
          fcli ssc session list
          # Login no ScanCentral SAST usando tokens especificados
          fcli sc-sast session login --ssc-ci-token=$FCLI_DEFAULT_SSC_CI_TOKEN --client-auth-token=$FCLI_DEFAULT_SC_SAST_CLIENT_AUTH_TOKEN --ssc-url=$FCLI_DEFAULT_SSC_URL || echo "Erro no login SC-SAST"
          # Pacote do projeto usando o ScanCentral e Maven
          scancentral package -bt mvn -o package.zip
          # Criação da versão do aplicativo no SSC se ela não existir
          fcli ssc appversion create --auto-required-attrs --skip-if-exists $SSC_APP_VERSION_ID --issue-template Prioritized-HighRisk-Project-Template
          # Início da verificação SAST e geração do log
          fcli sc-sast scan start --publish-to=$SSC_APP_VERSION_ID --sensor-version=$SC_SAST_SENSOR_VERSION --package-file=package.zip --store=Id --log-file=scan.log
          # Aguarda a conclusão da verificação
          fcli sc-sast scan wait-for ::Id:: --interval=30s
 
          # Conta e exibe o número de problemas encontrados
          fcli ssc issue count --appversion=$SSC_APP_VERSION_ID
          # Exibe o log de verificação para depuração
          echo "Analisando log"
          cat scan.log
          # Logout do ScanCentral SAST e SSC
          echo "Terminando conexão com a plataforma Fortify"
          fcli sc-sast session logout
          fcli ssc session logout
        displayName: Scan Central Scan
        continueOnError: false  # Parar em caso de erro